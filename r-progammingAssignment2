
makeCacheMatrix<- function(x = matrix()){
m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function() x
setInv<-function(p) m<<-p
getInv<-function() m
list(set=set,get = get,
setInv=setInv,
getInv=getInv)
}

#This function computes the inverse of
#the special "matrix" created by function makeCacheMatrix.

cacheSolve<- function(x, ...){
m<-x$getInv()
if (!is.null(m)){message("getting cached data")
return(m)}
mat<-x$get()
inv<-solve(mat,...)
x$setInv(inv)
}

my_mat<-makeCacheMatrix(matrix(1:3,5,2))
cacheSolve(my_mat)
